{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["LINE_HEIGHT","Math","ceil","FONT","App","useState","message","setMessage","foreground","setForeground","background","setBackground","slackEmoji","setSlackEmoji","threshold","setThreshold","snackBarOpen","setSnackBarOpen","handleMessageChange","useCallback","event","target","value","handleForegroundChange","handleBackgroundChange","handleThresholdChange","_event","newThreshold","handleSlackEmojiClick","a","navigator","clipboard","writeText","fontReady","setFontReady","useEffect","document","fonts","ready","fontFaceSet","load","Error","waitFontReady","canvasRef","useRef","current","canvas","ctx","getContext","fillStyle","font","textBaseline","lines","split","maxLineWidth","max","map","m","measureText","width","length","height","forEach","index","fillText","imageData","getImageData","data","emoji","i","j","replace","RegExp","trailingBackgrounds","matchAll","match","minTrailingBackgrounds","min","clearRect","Container","Snackbar","open","autoHideDuration","onClose","Box","Paper","p","sx","display","justifyContent","ref","flex","TextField","label","onChange","multiline","flexDirection","Typography","variant","gutterBottom","Slider","InputProps","readOnly","cursor","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6a5f950.chunk.js","sourcesContent":["import './App.css';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Container, Paper, Slider, Snackbar, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\n\nconst FONT_SIZE = 12\nconst LINE_HEIGHT = Math.ceil(FONT_SIZE * 1.1)\nconst FONT = `${FONT_SIZE}px DotGothic16`\n\nfunction App() {\n  const [message, setMessage] = useState('HBD')\n  const [foreground, setForeground] = useState(':tada:')\n  const [background, setBackground] = useState(':ome:')\n  const [slackEmoji, setSlackEmoji] = useState('')\n  const [threshold, setThreshold] = useState(64)\n  const [snackBarOpen, setSnackBarOpen] = useState(false)\n  const handleMessageChange = useCallback((event) => setMessage(event.target.value), [])\n  const handleForegroundChange = useCallback((event) => setForeground(event.target.value), [])\n  const handleBackgroundChange = useCallback((event) => setBackground(event.target.value), [])\n  const handleThresholdChange = useCallback((_event, newThreshold) => setThreshold(newThreshold), [])\n  const handleSlackEmojiClick = async () => {\n    await navigator.clipboard.writeText(slackEmoji)\n    setSnackBarOpen(true)\n  }\n  const handleSnackbarClose = () => setSnackBarOpen(false)\n\n  const [fontReady, setFontReady] = useState(false)\n  useEffect(() => {\n    async function waitFontReady() {\n      const fontFaceSet = await document.fonts.ready\n      const dotGothicLoaded = await fontFaceSet.load(FONT)\n      if (dotGothicLoaded) {\n        setFontReady(true)\n      } else {\n        throw new Error('dotGothic load failed')\n      }\n    }\n    waitFontReady()\n  }, [])\n  const canvasRef = useRef()\n  useEffect(() => {\n    if (!canvasRef.current) return\n    if (!fontReady) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    ctx.fillStyle = 'black'\n    ctx.font = FONT\n    ctx.textBaseline = 'top'\n\n    const lines = message.split(/\\n/g)\n    const maxLineWidth = Math.max(...lines.map(m => Math.ceil(ctx.measureText(m).width)))\n\n    if (!lines.length || !maxLineWidth) {\n      setSlackEmoji('')\n      return\n    }\n\n    canvas.width = maxLineWidth * 1.5\n    canvas.height = LINE_HEIGHT * lines.length\n    lines.forEach((m, index) => {\n      ctx.fillText(m, 0, LINE_HEIGHT * index + FONT_SIZE)\n    })\n\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n    const data = imageData.data\n    const width = imageData.width\n    let emoji = ''\n    for (let i = 0, j = 1; i < data.length; i += 4, j++) {\n      const alpha = data[i + 3]\n      emoji += alpha > threshold ? foreground : background\n      if (j % width === 0) {\n        emoji += \"\\n\"\n      }\n    }\n    emoji = emoji.replace(new RegExp(`^((?:${background})+)$\\n(?:^(?:${background})+$\\n)+`, 'gm'), '$1\\n')\n    const trailingBackgroundMatches = [...emoji.matchAll(new RegExp(`(?:${background})+$`, 'gm'))]\n    const trailingBackgrounds = trailingBackgroundMatches.map(match => match[0].length / background.length)\n    const minTrailingBackgrounds = Math.min(...trailingBackgrounds)\n    emoji = emoji.replace(new RegExp(`(?:${background}){${minTrailingBackgrounds}}$`, 'gm'), background)\n    setSlackEmoji(emoji)\n\n    return () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n    }\n  }, [background, fontReady, foreground, message, threshold])\n\n  if (!fontReady) {\n    return <Container sx={{font: FONT}}>loading</Container>\n  }\n\n  return (\n    <Container>\n      <Snackbar open={snackBarOpen} autoHideDuration={3000} onClose={handleSnackbarClose} message=\"コピーしました\" />\n      <Box m={1}>\n        <Paper>\n          <Box p={1} sx={{display: 'flex', justifyContent: 'center'}}>\n            <canvas ref={canvasRef} height={LINE_HEIGHT} />\n          </Box>\n          <Box p={1} sx={{display: 'flex', '& > :not(style)': { flex: 1 }}}>\n            <TextField label=\"メッセージ\" value={message} onChange={handleMessageChange} multiline />\n          </Box>\n          <Box sx={{display: 'flex', justifyContent: 'space-between', '& > :not(style)': {m: 1, flex: 1}}}>\n            <TextField label=\"前景\" value={foreground} onChange={handleForegroundChange} />\n            <TextField label=\"背景\" value={background} onChange={handleBackgroundChange} />\n          </Box>\n          <Box p={1} sx={{display: 'flex', flexDirection: 'column', '& > :not(style)': { flex: 1 }}}>\n            <Typography variant=\"body2\" gutterBottom>背景・前景 境界値</Typography>\n            <Slider max={255} value={threshold} onChange={handleThresholdChange} />\n          </Box>\n          {slackEmoji && (\n            <Box p={1} sx={{display: 'flex', '& > :not(style)': { flex: 1 }}}>\n              <TextField\n                label=\"クリックしてコピー\"\n                value={slackEmoji}\n                variant=\"filled\"\n                InputProps={{readOnly: true, sx: {cursor: 'pointer', '& > *': { cursor: 'pointer'}}}}\n                sx={{cursor: 'pointer'}}\n                onClick={handleSlackEmojiClick}\n                multiline\n              />\n            </Box>\n          )}\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}